
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    # 解决长轮询的问题
    proxy_buffering off;
    # proxy_buffer_size  128k;
        # proxy_buffer_size  128k;
    proxy_buffer_size 256k;
    proxy_buffers   8 256k;
    proxy_busy_buffers_size 1M;
    proxy_temp_file_write_size 512k;
    proxy_connect_timeout 600;
    proxy_read_timeout 600;
    proxy_send_timeout 600;


    # 可能能解决长期请求无响应的问题
    proxy_ignore_client_abort on;

    # 启用Gzip数据压缩
    gzip on;
    gzip_min_length  2k;
    gzip_buffers     4 16k;
    #gzip_http_version 1.0;
    gzip_comp_level 3;
    gzip_types       text/plain application/x-javascript text/css application/xml application/json text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary on;
    # 负载均衡配置
    upstream pss {
        ip_hash;
        server 192.168.21.128:8080;
    }

    upstream console {
       ip_hash;
       server 192.168.21.128:8022;
    }
    upstream rcs {
        ip_hash;
        server 192.168.21.128:8090;
    }

    server {
        listen       80;
        server_name  localhost;
       
        set $wwwroot /opt/nginx/html/;

        #charset koi8-r;
        add_header backendIP $upstream_addr;
        add_header backendCode $upstream_status; 
        #access_log  logs/host.access.log  main;

        client_max_body_size 200m; 
        client_body_buffer_size 256k; 
        
        location / {
            root   "${wwwroot}lh-web/";
            index  index.html index.htm;
        }

        location /console-web {
            root   "${wwwroot}";
            index  index.html index.htm;
        }

        location /pss-web {
            root   "${wwwroot}/";
            index  index.html index.htm;
        }        

        location ^~ /api/ {
	    # proxy_pass http://192.168.21.167:9876/;
            #proxy_pass http://localhost:9876/;
            proxy_pass http://192.168.20.63:9876/;
            #proxy_pass http://192.168.21.103/api/;
            # 转发真实客户端请求IP
            proxy_redirect off;
            proxy_set_header Host $host;#保留代理之前的host
            proxy_set_header X-Real-IP $remote_addr;#保留代理之前的真实客户端ip
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    HTTP_X_FORWARDED_FOR $remote_addr;#在多级代理的情况下，记录每次代理之前的客户端真实ip
            # 共享Session
            proxy_cookie_path  /pss-operation /api;
        }

         # /socket.io/ -> 用于对接本地服务socket接口 
        location ^~ /socket.io/ {
            proxy_pass http://$remote_addr:8081;
            # 转发真实客户端请求IP
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;#保留代理之前的host
            proxy_set_header X-Real-IP $remote_addr;#保留代理之前的真实客户端ip
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    HTTP_X_FORWARDED_FOR $remote_addr;#在多级代理的情况下，记录每次代理之前的客户端真实ip
        }

      
    }
}
